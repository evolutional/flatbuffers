// automatically generated by the FlatBuffers compiler, do not modify

namespace fbbench
{

using System;
using FlatBuffers;

public struct Bar : Accessor
{
  private Struct __p;
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Bar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Foo Parent { get { return (new Foo()).__assign(__p.bb_pos + 0, __p.bb); } }
  public int Time { get { return __p.bb.GetInt(__p.bb_pos + 16); } }
  public void MutateTime(int time) { __p.bb.PutInt(__p.bb_pos + 16, time); }
  public float Ratio { get { return __p.bb.GetFloat(__p.bb_pos + 20); } }
  public void MutateRatio(float ratio) { __p.bb.PutFloat(__p.bb_pos + 20, ratio); }
  public ushort Size { get { return __p.bb.GetUshort(__p.bb_pos + 24); } }
  public void MutateSize(ushort size) { __p.bb.PutUshort(__p.bb_pos + 24, size); }

  public static Offset<Bar> CreateBar(FlatBufferBuilder builder, ulong parent_Id, short parent_Count, sbyte parent_Prefix, uint parent_Length, int Time, float Ratio, ushort Size) {
    builder.Prep(8, 32);
    builder.Pad(6);
    builder.PutUshort(Size);
    builder.PutFloat(Ratio);
    builder.PutInt(Time);
    builder.Prep(8, 16);
    builder.PutUint(parent_Length);
    builder.Pad(1);
    builder.PutSbyte(parent_Prefix);
    builder.PutShort(parent_Count);
    builder.PutUlong(parent_Id);
    return new Offset<Bar>(builder.Offset);
  }
};


}
